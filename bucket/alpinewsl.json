{
    "version": "3.11.5-1",
    "description": "Install Alpine as a WSL Instance",
    "homepage": "https://github.com/yuk7/AlpineWSL/",
    "license": "MIT",
    "notes": "Even when you are logging in as 'root', some operations (like service command) require Windows administrator privileges",
    "url": "https://github.com/yuk7/AlpineWSL/releases/download/3.11.5-1/Alpine.zip",
    "hash": "48f7b9570e8b38ad08b1f003ce9d58894c2937b4201b6ecb875d39066e2294c7",
    "##": "'rootfs' must be a 'real' directory (at least on Windows 10 RS4)",

    "post_install": [
        "$installable = $true",
        "$user = [Security.Principal.WindowsIdentity]::GetCurrent() -as [Security.Principal.WindowsPrincipal]",
        "$permission = Get-Acl $dir | select -ExpandProperty Access | where {",
        "    ($user.IsInRole($_.IdentityReference)) -and `",
        "    ($_.FileSystemRights.ToString() -eq 'FullControl') -and `",
        "    # 3 = ([Security.AccessControl.InheritanceFlags]::ContainerInherit -bor ObjectInherit)",
        "    ($_.InheritanceFlags -band 3) -and `",
        "    ($_.PropagationFlags.ToString() -ne 'NoPropagateInherit')",
        "}",
        "if ($null -eq $permission) {",
        "   warn \"Full Control access to the scoop directory is necessary to install WSL distribution.\"",
        "   warn \"Change directory security and reinstall AlpineWSL.\"",
        "   $installable = $false",
        "}",
        "if ($null -eq (Get-Command wslconfig -ErrorAction SilentlyContinue)) {",
        "    warn \"WSL appears not to be enabled!\"",
        "    warn \"Run 'Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux'\"",
        "    warn \"from an elevated PowerShell. Restart your computer when prompted and reinstall AlpineWSL.\"",
        "    $installable = $false",
        "}",
        "if ($installable) {",
        "    \"`$si = New-Object System.Diagnostics.ProcessStartInfo '$dir\\Alpine.exe' -Property @{ UseShellExecute = `$false; RedirectStandardInput = `$true }",
        "    `$p = [System.Diagnostics.Process]::Start(`$si)",
        "    `$p.StandardInput.Write('y')",
        "    `$p.WaitForExit()",
        "    `$lx_uid = & '$dir\\Alpine.exe' get --lxuid",
        "    if(!`$lx_uid) { error 'AlpineWSL is not installed!'; return }",
        "    Set-ItemProperty -Path ('HKCU:Software\\Microsoft\\Windows\\CurrentVersion\\Lxss\\' + `$lx_uid) -Name BasePath -Value '$persist_dir\\data'",
        "    if (Test-Path ('$persist_dir' + '\\data\\rootfs')) {",
        "        Remove-Item -Recurse -Path '$dir\\rootfs'",
        "    } else {",
        "        Move-Item -Path '$dir\\rootfs' -Destination '$persist_dir\\data\\rootfs'",
        "    }",
        "    Remove-Item -Recurse -Path '$dir\\temp'",
        "    \" | Set-Content \"$dir\\install.ps1\"",
        "    & \"$dir\\install.ps1\"",
        "}"
    ],
    "uninstaller": {
        "script": [
            "$lx_uid = & \"$dir\\Alpine.exe\" get --lxuid",
            "if(!$lx_uid) { error 'AlpineWSL is not registered!'; return }",
            "Set-ItemProperty -Path \"HKCU:Software\\Microsoft\\Windows\\CurrentVersion\\Lxss\\$lx_uid\" -Name BasePath -Value $dir",
            "New-Item -ItemType Directory -Path \"$dir\\rootfs\" | Out-Null",
            "'y' | & \"$dir\\Alpine.exe\" clean"
        ]
    },
    "bin": "Alpine.exe",
    "shortcuts": [
        [
            "Alpine.exe",
            "Alpine"
        ]
    ],
    "persist": "data",
    "checkver": {
        "url": "https://api.github.com/repos/yuk7/AlpineWSL/releases/latest",
        "jp": "$.tag_name"
    },
    "autoupdate": {
        "url": "https://github.com/yuk7/AlpineWSL/releases/download/$version/Alpine.zip"
    }
}
